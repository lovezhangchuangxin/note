(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{343:function(t,e,_){"use strict";_.r(e);var a=_(16),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"npm-学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-学习"}},[t._v("#")]),t._v(" npm 学习")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("参考资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.npmjs.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文文档"),e("OutboundLink")],1)])])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.npmjs.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文文档"),e("OutboundLink")],1),t._v("已经是很好的学习网站，但是其中依然有不少英文。本文大部分将参考该文档，非原创。")]),t._v(" "),e("h2",{attrs:{id:"_1-npm-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-npm-是什么"}},[t._v("#")]),t._v(" 1 npm 是什么？")]),t._v(" "),e("p",[t._v("首先要说明的是 npm 基于 nodejs。")]),t._v(" "),e("p",[t._v("在 nodejs 中引入了"),e("strong",[t._v("模块")]),t._v("（也可叫做"),e("strong",[t._v("包")]),t._v("）的概念。模块化的编程有利于程序的开发和维护，同时我们可以引入别人的模块来减少重复开发，降低开发难度。")]),t._v(" "),e("p",[t._v("然而，当一个项目中使用的包很多时，靠手动管理是很麻烦的，同时我们想要使用别人的包时也没有方便的途径，npm 就是为了解决这些问题而推出的。npm 提供了一个公共的平台，允许你发布自己的包和免费下载别人的包，这就是"),e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),e("OutboundLink")],1),t._v("的由来。不过如果手动从官网下载包又显得麻烦和不方便导入，于是 npm 提供了一个命令行工具，你可以使用简单的命令来执行下载包，发布包等操作。")]),t._v(" "),e("p",[t._v("简而言之，npm 由三个独立的部分组成：")]),t._v(" "),e("ul",[e("li",[t._v("网站："),e("em",[t._v("是开发者查找包（package）、设置参数以及管理 npm 使用体验的主要途径。")])]),t._v(" "),e("li",[t._v("注册表（registry）："),e("em",[t._v("是一个巨大的数据库，保存了每个包（package）的信息。")])]),t._v(" "),e("li",[t._v("命令行工具 （CLI）："),e("em",[t._v("开发者通过 CLI 与 npm 打交道。")])])]),t._v(" "),e("h3",{attrs:{id:"_1-1-用-npm-可以"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-用-npm-可以"}},[t._v("#")]),t._v(" 1.1 用 npm 可以：")]),t._v(" "),e("ul",[e("li",[t._v("让包适配你的项目，或者原样合并进你的项目。")]),t._v(" "),e("li",[t._v("下载你可以立即使用的独立运行的工具。")]),t._v(" "),e("li",[t._v("使用 npx，无需下载即可使用包。")]),t._v(" "),e("li",[t._v("随时随地与任何 npm 用户共享代码。")]),t._v(" "),e("li",[t._v("对特定的开发人员限制代码。")]),t._v(" "),e("li",[t._v("组建虚拟团队。")]),t._v(" "),e("li",[t._v("管理多版本的代码的代码依赖。")]),t._v(" "),e("li",[t._v("更新基础代码时，轻松更新应用程序。")]),t._v(" "),e("li",[t._v("发现解决同一难题的多种方法。")]),t._v(" "),e("li",[t._v("寻找正在处理类似问题的其他开发人员。")])]),t._v(" "),e("p",[t._v("这些只是开发人员使用 npm 的几个示例")]),t._v(" "),e("h2",{attrs:{id:"_2-如何安装-npm-并管理-npm-版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何安装-npm-并管理-npm-版本"}},[t._v("#")]),t._v(" 2 如何安装 npm 并管理 npm 版本")]),t._v(" "),e("h3",{attrs:{id:"_2-1-安装-npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-安装-npm"}},[t._v("#")]),t._v(" 2.1 安装 npm")]),t._v(" "),e("p",[t._v("上文已经提到，npm 可以说是由 npm 网站，注册表（数据库）和命令行工具组成。")]),t._v(" "),e("p",[t._v("为了方便起见，下文我们讨论的 npm 指的是 npm 的命令行工具。")]),t._v(" "),e("p",[t._v("npm 是基于 nodejs 的，我们需要先安装 nodejs。而现在的 nodejs 已内置了 npm，所以你只要下载了 nodejs 便可以使用 npm")]),t._v(" "),e("h3",{attrs:{id:"_2-2-更新-npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-更新-npm"}},[t._v("#")]),t._v(" 2.2 更新 npm")]),t._v(" "),e("p",[t._v("当你安装 nodejs 时，npm 已经自动安装。但是，npm 的更新比 nodejs 的更新频繁得多，你的 npm 不一定是最新的版本。\n你可以查看 npm 的版本通过：")]),t._v(" "),e("p",[e("code",[t._v("npm -v")])]),t._v(" "),e("p",[t._v("当你发现自己 npm 的版本落后于最新的版本时，可以安装最新的版本：")]),t._v(" "),e("p",[e("code",[t._v("npm install npm@latest -g")])]),t._v(" "),e("p",[t._v("为了安装一个未来将发行的版本，你可以使用：")]),t._v(" "),e("p",[e("code",[t._v("npm install npm@next -g")])]),t._v(" "),e("p",[t._v("这可以帮忙你测试你的包可以在未来版本的 npm 中可用。")]),t._v(" "),e("h2",{attrs:{id:"_3-如何安装本地包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何安装本地包"}},[t._v("#")]),t._v(" 3 如何安装本地包")]),t._v(" "),e("p",[t._v("有两种方式用来安装 npm 包：本地安装和全局安装。至于选择哪种方式来安装，取决于我们如何使用这个包。")]),t._v(" "),e("ul",[e("li",[t._v("如果你自己的模块依赖于某个包，并通过 Node.js 的 require 加载，那么你应该选择本地安装，这种方式也是 npm install 命令的默认行为。")]),t._v(" "),e("li",[t._v("如果你想将包作为一个命令行工具，（比如 grunt CLI），那么你应该选择全局安装。")])]),t._v(" "),e("p",[t._v("可以使用命令"),e("code",[t._v("npm install 包名")]),t._v("来安装一个包，例如安装 lodash 这个包：")]),t._v(" "),e("p",[e("code",[t._v("npm install lodash")])]),t._v(" "),e("p",[t._v("上述命令执行之后将会在当前的目录下创建一个 node_modules 的目录（如果不存在的话），然后将下载的包保存到这个目录下。")]),t._v(" "),e("h3",{attrs:{id:"_3-1-哪个版本的包会被安装了"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-哪个版本的包会被安装了"}},[t._v("#")]),t._v(" 3.1 哪个版本的包会被安装了？")]),t._v(" "),e("p",[t._v("在本地目录中如果没有 package.json 这个文件的话，那么最新版本的包会被安装。")]),t._v(" "),e("p",[t._v("如果存在 package.json 文件，则会在 package.json 文件中查找针对这个包所约定的语义化版本规则，然后安装符合此规则的最新版本。")]),t._v(" "),e("h2",{attrs:{id:"_4-使用-package-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用-package-json"}},[t._v("#")]),t._v(" 4 使用 package.json")]),t._v(" "),e("p",[t._v("管理本地包的最好方式是创建一个 package.json 文件，一个 package.json 文件允许你：")]),t._v(" "),e("ul",[e("li",[t._v("列举出你项目所依赖的包。")]),t._v(" "),e("li",[t._v("允许您使用语义版本控制规则指定项目可以使用的包的版本。")]),t._v(" "),e("li",[t._v("使您的构建可重现，因此更容易与其他开发人员共享。")])]),t._v(" "),e("h3",{attrs:{id:"_4-1-要求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-要求"}},[t._v("#")]),t._v(" 4.1 要求")]),t._v(" "),e("p",[t._v("package.json 文件中必须具备 name（项目名称）和 version（项目版本） 字段")]),t._v(" "),e("ul",[e("li",[t._v("name\n"),e("ul",[e("li",[t._v("全部小写")]),t._v(" "),e("li",[t._v("没有空格")]),t._v(" "),e("li",[t._v("允许使用-和_")])])]),t._v(" "),e("li",[t._v("version\n"),e("ul",[e("li",[t._v("形式为：x.x.x")])])])]),t._v(" "),e("p",[t._v("version 的详细标准：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Code status")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Stage")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Rule")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Example version")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("First release")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("New product")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Start with 1.0.0")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("1.0.0")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Backward compatible bug fixes")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Patch release")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Increment the third digit")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("1.0.1")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Backward compatible new features")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Minor release")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Increment the middle digit and reset last digit to zero")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("1.1.0")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Changes that break backward compatibility")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Major release")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Increment the first digit and reset middle and last digits to zero")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("2.0.0")])])])]),t._v(" "),e("h3",{attrs:{id:"_4-2-创建一个-package-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-创建一个-package-json"}},[t._v("#")]),t._v(" 4.2 创建一个 package.json")]),t._v(" "),e("p",[t._v("有两种方法可以创建 package.json 文件。")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("命令行输入"),e("code",[t._v("npm init")]),t._v("，这将会一步步引导你配置你的 package.json 文件")])]),t._v(" "),e("li",[e("p",[t._v("命令行输入"),e("code",[t._v("npm init -y")]),t._v("，这将会使用当前目录中提取的信息生成默认的 package.json 文件")])])]),t._v(" "),e("p",[t._v("部分默认的参数：")]),t._v(" "),e("ul",[e("li",[t._v("name: 项目名字，默认当前目录的名字")]),t._v(" "),e("li",[t._v("version: 版本号，默认 1.0.0")]),t._v(" "),e("li",[t._v('description: 项目的描述信息，默认 readme 中的部分内容或者空字符串""')]),t._v(" "),e("li",[t._v("main: 入口文件，默认 index.js")]),t._v(" "),e("li",[t._v("scripts: 脚本命令，默认为一个空脚本 test")]),t._v(" "),e("li",[t._v("keywords: 项目关键字，默认为空")]),t._v(" "),e("li",[t._v("author: 作者，默认为空")]),t._v(" "),e("li",[t._v("license: 许可证，默认为 ISC")]),t._v(" "),e("li",[t._v("homepage: 官网主页地址")])]),t._v(" "),e("h3",{attrs:{id:"_4-3-指定依赖关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-指定依赖关系"}},[t._v("#")]),t._v(" 4.3 指定依赖关系")]),t._v(" "),e("p",[t._v("package.json 中有两个字段列出项目中所依赖的包")]),t._v(" "),e("ul",[e("li",[t._v("dependencies: 用于生产环境的包")]),t._v(" "),e("li",[t._v("devDependencies: 用于开发环境的包")])]),t._v(" "),e("p",[t._v("当我们使用"),e("code",[t._v("npm install <package_name>")]),t._v("或者"),e("code",[t._v("npm install <package_name> --save")]),t._v("安装包时，包的相关信息将被添加到 dependencies 中。")]),t._v(" "),e("p",[t._v("当我们使用"),e("code",[t._v("npm install <package_name> --save-dev")]),t._v("安装包时，包的相关信息将被添加到 devDependencies 中。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("简写")]),t._v(" "),e("ul",[e("li",[t._v("install 可以简写为 i，如"),e("code",[t._v("npm i axios")]),t._v("即是"),e("code",[t._v("npm install axios")]),t._v("。")]),t._v(" "),e("li",[t._v("--save 可以简写为 -S，如"),e("code",[t._v("npm i axios -S")]),t._v("即是"),e("code",[t._v("npm i axios --save")]),t._v("。")]),t._v(" "),e("li",[t._v("--save-dev 可以简写为 -D，如"),e("code",[t._v("npm i typescript -D")]),t._v("即是"),e("code",[t._v("npm i typescript -save-dev")]),t._v("。")])])]),t._v(" "),e("h2",{attrs:{id:"_5-下载更新卸载包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-下载更新卸载包"}},[t._v("#")]),t._v(" 5 下载更新卸载包")]),t._v(" "),e("h3",{attrs:{id:"_5-1-下载包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-下载包"}},[t._v("#")]),t._v(" 5.1 下载包")]),t._v(" "),e("p",[t._v("上文已经提到过，使用"),e("code",[t._v("npm install <package_name>")]),t._v("可以下载包。")]),t._v(" "),e("p",[t._v("使用这个命令时，在下载之前，如果 node_modules 目录中相应的包已经存在，则不再重复安装。")]),t._v(" "),e("p",[t._v("如果我们希望不管一个模块是否安装过，都要 npm 强制重新安装，可以使用-f 或者--force 参数。")]),t._v(" "),e("p",[e("code",[t._v("npm install <package_name> -f")])]),t._v(" "),e("h3",{attrs:{id:"_5-2-更新包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-更新包"}},[t._v("#")]),t._v(" 5.2 更新包")]),t._v(" "),e("p",[t._v("使用"),e("code",[t._v("npm update")]),t._v("命令可以将 package.json 中所有列出的包更新到最新的版本（由 package.json 中的版本号决定），如果 package.json 中依赖字段的包未安装则安装，如果依赖字段中删除了某个包名，npm update 并不会帮你删除该包。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("npm update 并不是将包更新到官网上发布的该包的最新版本，而是由我们项目中 package.json 中的版本号所决定的最新版本。")])]),t._v(" "),e("p",[t._v("例如：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"react": "^15.6.1",\n"react-dom": "~15.6.1"\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("我们前面已经讨论过了，版本号由三位数字组成，第一位数字表示大版本的更改，第二位数字表示小的特性更新，第三位数字表示 bug 的修改。^表示锁定第一位数字，~表示锁定前两位数字，因此更新后 react 的版本为 15.x.x 的最新版本，react-dom 的版本为 15.6.x 的最新版本。")]),t._v(" "),e("p",[t._v("前面使用 npm update 更新 package.json 中所列出的所有依赖，我们也可以更新具体的某个包：")]),t._v(" "),e("p",[t._v("更新当前项目中依赖包："),e("code",[t._v("npm update <package_name>")])]),t._v(" "),e("p",[t._v("更新全局包："),e("code",[t._v("npm update <package_name> -g")])]),t._v(" "),e("h3",{attrs:{id:"_5-3-卸载包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-卸载包"}},[t._v("#")]),t._v(" 5.3 卸载包")]),t._v(" "),e("p",[t._v("卸载当前项目中依赖包："),e("code",[t._v("npm uninstall <package_name>")])]),t._v(" "),e("p",[t._v("卸载全局包："),e("code",[t._v("npm uninstall <package_name> -g")])])])}),[],!1,null,null,null);e.default=v.exports}}]);